chrome.action.onClicked.addListener(t=>{});chrome.runtime.onInstalled.addListener(async t=>{});let A=1e4,y=[1,2,3,4,5],T="09:00",v="18:00",g=200,o=0,a=0,i=0,u=0,s=!1,f=null,m="¥",w=!1,S="stars";const I=async()=>{try{const t=await chrome.storage.sync.get(["salarySettings"]);if(t.salarySettings){const e=t.salarySettings;A=e.monthlySalary||1e4,y=Array.isArray(e.workDays)?[...e.workDays]:[1,2,3,4,5],T=e.workStartTime||"09:00",v=e.workEndTime||"18:00",g=e.updateInterval||200,m=e.currencyUnit||"¥",w=e.hideActualAmount||!1,S=e.hideFormat||"stars",console.log("Background: Settings loaded:",e)}h()}catch(t){console.error("Error loading settings:",t)}},M=t=>{const e=Math.floor(t/60),r=Math.floor(t%60);return`${e}小时${r.toString().padStart(2,"0")}分钟`},C=()=>{const t=new Date,e=t.getFullYear(),r=t.getMonth(),n=new Date(e,r+1,0).getDate();let c=0;for(let l=1;l<=n;l++){const k=new Date(e,r,l);y.includes(k.getDay())&&c++}return c},h=()=>{const t=new Date,e=t.getDay(),r=t.getHours(),n=t.getMinutes(),c=t.getSeconds(),l=t.getMilliseconds();if(s=Array.isArray(y)&&y.includes(e),!s){o=0,a=0,p();return}const[k,E]=T.split(":").map(Number),[B,L]=v.split(":").map(Number),d=k*60+E,b=B*60+L,D=r*60+n+c/60+l/6e4,F=(b-d)/60;u=C(),i=A/(u*F),D<d?a=0:D>b?a=b-d:a=D-d,o=a/60*i,p()},p=()=>{let t="";s&&(o>=1e6?t=(o/1e6).toFixed(1).replace(/\.0$/,"")+"M":o>=1e4?t=(o/1e3).toFixed(1).replace(/\.0$/,"")+"k":t=Math.floor(o).toString(),t=t.slice(0,4)),chrome.action.setBadgeBackgroundColor({color:s?"#3B82F6":"#BDBDBD"});const e={currentSalary:o,isWorkDay:s,workDaysInMonth:u,hourlyRate:i,currentWorkMinutes:M(a),currencyUnit:m,hideActualAmount:w,hideFormat:S};console.log("Preparing to send salary data:",e),chrome.tabs.query({active:!0,currentWindow:!0},async function(r){const n=r[0];if(n&&n.id){console.log("Found active tab:",n.id);try{if(!n.url||n.url.startsWith("chrome:")||n.url.startsWith("edge:")){console.log("Skipping protected tab:",n.url);return}await chrome.tabs.sendMessage(n.id,{type:"UPDATE_SALARY",data:e}),console.log("Successfully sent message to tab:",n.id)}catch(c){console.log("Error sending message to tab:",c)}}else console.log("No active tab found")})};chrome.runtime.onMessage.addListener((t,e,r)=>{if(console.log("Received message in background:",t.type),t.type==="SETTINGS_UPDATED")return I().then(()=>{h(),r({success:!0})}),!0;if(t.type==="GET_SALARY_DATA"){const n={currentSalary:o,isWorkDay:s,workDaysInMonth:u,hourlyRate:i,currentWorkMinutes:M(a),currencyUnit:m,hideActualAmount:w,hideFormat:S};return console.log("Sending salary data response:",n),r(n),!0}});const W=async()=>{console.log("Initializing background script"),await I(),h(),f&&clearInterval(f);const t=typeof g=="number"&&g>=100?g:200;console.log(`Setting timer with interval: ${t}ms`),f=setInterval(h,t),chrome.tabs.onActivated.addListener(async e=>{console.log("Tab activated:",e.tabId);try{const r=await chrome.tabs.get(e.tabId);r&&r.url&&!r.url.startsWith("chrome:")&&!r.url.startsWith("edge:")&&(console.log("Sending data to newly activated tab"),await chrome.tabs.sendMessage(e.tabId,{type:"UPDATE_SALARY",data:{currentSalary:o,isWorkDay:s,workDaysInMonth:u,hourlyRate:i,currentWorkMinutes:M(a),currencyUnit:m,hideActualAmount:w,hideFormat:S}}))}catch(r){console.log("Error handling tab activation:",r)}})};W();chrome.runtime.onInstalled.addListener(async t=>{await W()});
